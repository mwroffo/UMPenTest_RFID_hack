import serial
import threading

class Controller():
  
  codes = [20673336500502904] # Nils id

  def start(self):
    try:
      self.ser = serial.Serial('/dev/cu.usbmodem1411', 9600)
    except serial.SerialException as e:
      print(str(e))
      print('NOTE: is arduino conneted?')
      return


    t = threading.Thread(target=self.read, daemon=True)
    t.start()

  def read(self):
    print('Controller Listening...')

    listening_line = self.ser.readline()
    if (listening_line == b'Arduino listening...\r\n'):
      print('Arduino listening...')
    else:
      print('WARNING: Arduino may not be listening')

    while True:
      # Read in line
      line = self.ser.readline()
      # Remove '\r\n' and decode
      line = line[:-2].decode("utf-8")

      # if it starts with 'print', print it
      if line.startswith('print'):
        print(line)
      # Otherwise interpret it as a card code
      else:
        # Parse to an int
        code = int(line, 2)
        self.codes.append(code)

        print(f'Code recieved: {line} {code} ')
        print(f'Current codes: {self.codes}')


  def write(self, index):
    print(f'Selecting code {index}: {self.codes[index]}')
    write_bytes = (self.codes[index]).to_bytes(7, 'big')
    print(write_bytes)
    self.ser.write(write_bytes)
    return 'Sent to arduino.'

if __name__ == '__main__':
  c = Controller()
  c.start()