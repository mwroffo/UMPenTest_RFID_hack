// Green (data) and white (inv) wires plugged into digital pins 2 and 3
// white and green are always opposites of eachother
// (red wire into 5v, black wire into ground)
// If you are having issues, try jiggling the wires!
char dataPin = 2;
char invPin = 3;
// These two pins lead out to the door contol server
// (here called the 'wall')
char wallDataPin = 7;
char wallInvPin = 8;
// Beepers!
char beepPin = 5;
// Green led
char grnPin = 6;

void setup() {
  pinMode(dataPin, INPUT);
  pinMode(invPin, INPUT);
  pinMode(wallDataPin, INPUT);
  pinMode(wallInvPin, INPUT);
  
  pinMode(beepPin, OUTPUT);
  pinMode(grnPin, OUTPUT);
  // To recive data, open your serial monitor
  // and set the baud rate to 9600
  Serial.begin(9600);
  Serial.println("Arduino listening...");
  digitalWrite(beepPin, HIGH);
  digitalWrite(grnPin, HIGH);
}

// Count of the current retrivial (-1 = not recieving bits currently)
int recieveCount = -1;
// Can toggle door's normal function
bool locked = false;

void loop() {
  readScanner();
  readPython();
}

void readScanner() {
  // Read in the values from the green / white wires
  int data = digitalRead(dataPin);
  int inv = digitalRead(invPin);

  // If we recieved a bit, write it
  if (data != 1 or inv != 1) {
    Serial.print(data);

    // Pass along the values (if unlocked)
    if (! locked) {
      digitalWrite(wallDataPin, data);
      digitalWrite(wallInvPin, inv);
    } 
    // Set to currently recieving
    recieveCount = 0;
  }

  // If currently recieving, increase count
  if (recieveCount >= 0) {
    recieveCount ++;
  }
  // if we havent recieved bits in a while, end
  if (recieveCount > 30000) {
    Serial.println("");
    recieveCount = -1;

    if (locked) {
      // Beep long to mimic denial sound
      digitalWrite(beepPin, LOW);
      delay(1000);
      digitalWrite(beepPin, HIGH);
    }
  }
}

void readPython() {
  if (Serial.available() > 0) {
    // Read in byte-by-byte
    int in = Serial.read();
    Serial.print("print byte to wall: ");
    Serial.println(in);

    if (in == 0) {
      toggleLock();
    }

    writeToWall(in);
  }
}

void writeToWall(int out) {

  Serial.print("print bits to wall: ");
  for (byte i=0; i<8; i++) {
    bool dataState = bitRead(out, i);
    bool invState = ! dataState;
    
    digitalWrite(wallDataPin, dataState);
    digitalWrite(wallInvPin, invState);
    
    Serial.print(dataState);
  }
  Serial.println();

  // Fake beep and lights
  digitalWrite(beepPin, LOW);
  digitalWrite(grnPin, LOW);
  delay(40);
  digitalWrite(beepPin, HIGH);
  digitalWrite(grnPin, HIGH);
    
}

void toggleLock() {
  // Turn off (or turn back on) the door's normal operation
  locked = !locked;
}

